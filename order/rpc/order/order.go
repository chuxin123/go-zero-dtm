// Code generated by goctl. DO NOT EDIT!
// Source: order.proto

package order

import (
	"context"

	"go-zero-dtm/order/rpc/types/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	CheckOrderResp  = pb.CheckOrderResp
	CreateOrderReq  = pb.CreateOrderReq
	CreateOrderResp = pb.CreateOrderResp

	Order interface {
		CheckOrder(ctx context.Context, in *CreateOrderReq, opts ...grpc.CallOption) (*CheckOrderResp, error)
		CreateOrder(ctx context.Context, in *CreateOrderReq, opts ...grpc.CallOption) (*CreateOrderResp, error)
		CreateOrderRollback(ctx context.Context, in *CreateOrderReq, opts ...grpc.CallOption) (*CreateOrderResp, error)
	}

	defaultOrder struct {
		cli zrpc.Client
	}
)

func NewOrder(cli zrpc.Client) Order {
	return &defaultOrder{
		cli: cli,
	}
}

func (m *defaultOrder) CheckOrder(ctx context.Context, in *CreateOrderReq, opts ...grpc.CallOption) (*CheckOrderResp, error) {
	client := pb.NewOrderClient(m.cli.Conn())
	return client.CheckOrder(ctx, in, opts...)
}

func (m *defaultOrder) CreateOrder(ctx context.Context, in *CreateOrderReq, opts ...grpc.CallOption) (*CreateOrderResp, error) {
	client := pb.NewOrderClient(m.cli.Conn())
	return client.CreateOrder(ctx, in, opts...)
}

func (m *defaultOrder) CreateOrderRollback(ctx context.Context, in *CreateOrderReq, opts ...grpc.CallOption) (*CreateOrderResp, error) {
	client := pb.NewOrderClient(m.cli.Conn())
	return client.CreateOrderRollback(ctx, in, opts...)
}
